{
	"info": {
		"_postman_id": "a0980f13-f458-4225-a5a5-d4e39c31ee9e",
		"name": "CTK-TMF645-ServiceQualification-R18.5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "N1",
			"item": [
				{
					"name": "/serviceQualification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData)) { ",
									"  ",
									"    pm.test('Array not expected as response', function (){pm.expect.fail()});",
									"  ",
									"",
									"}",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});",
									"",
									"var instance = pm.response.json();",
									"var requiredAttributes = [ 'id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem',  ];",
									"",
									"pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
									"",
									"",
									"",
									"pm.test('Response id attribute is of type string', function() { pm.expect(instance.id).to.be.a('string'); });",
									"pm.test('Response href attribute is of type string', function() { pm.expect(instance.href).to.be.a('string'); });",
									"pm.test('Response serviceQualificationDate attribute is of type string', function() { pm.expect(instance.serviceQualificationDate).to.be.a('string'); });",
									"pm.test('Response state attribute is of type string', function() { pm.expect(instance.state).to.be.a('string'); });",
									"pm.test('Response serviceQualificationItem attribute is of type array', function() { pm.expect(instance.serviceQualificationItem).to.be.a('array'); });",
									"pm.test('Response serviceQualificationItem.id attribute is of type string', function() { pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string'); });",
									"pm.test('Response serviceQualificationItem.state attribute is of type string', function() { pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string'); });",
									"",
									"",
									"pm.test('id is set', function() {pm.globals.set('IDSQ01', instance.id); pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");});",
									"pm.test('href is set', function() {pm.globals.set('HREFSQ01', instance.href); pm.expect(instance.href) == pm.globals.get(\"HREFSQ01\");});",
									"pm.test('serviceQualificationDate is set', function() {pm.globals.set('SERVICEQUALIFICATIONDATESQ01', instance.serviceQualificationDate); pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\");});",
									"pm.test('state is set', function() {pm.globals.set('STATESQ01', instance.state); pm.expect(instance.state) == pm.globals.get(\"STATESQ01\");});",
									"pm.test('serviceQualificationItem is set', function() {pm.globals.set('SERVICEQUALIFICATIONITEMSQ01', instance.serviceQualificationItem); pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");});",
									"pm.test('serviceQualificationItem_id is set', function() {pm.globals.set('SERVICEQUALIFICATIONITEM_IDSQ01', instance.serviceQualificationItem[0].id); pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\");});",
									"pm.test('serviceQualificationItem_state is set', function() {pm.globals.set('SERVICEQUALIFICATIONITEM_STATESQ01', instance.serviceQualificationItem[0].state); pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");});",
									"",
									"",
									"pm.test(\"Body includes value held on id\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.id);",
									"      });",
									"pm.test(\"Body includes value held on href\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.href);",
									"      });",
									"pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"      });",
									"pm.test(\"Body includes value held on state\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.state);",
									"      });",
									"pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"            pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"        });",
									"pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"            pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"        });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Maximum download/upload speed for access at an address\",\n    \"externalId\": \"SQ101\",\n    \"expectedQualificationDate\": \"2017-10-25T12:13:16.361Z\",\n    \"estimatedResponseDate\": \"2020-10-25T12:13:16.361Z\",\n    \"provideAlternative\": true,\n    \"provideOnlyAvailable\": false,\n    \"provideUnavailabilityReason\": false,\n    \"serviceQualificationItem\": [{\n        \"id\": \"1\",\n        \"service\": {\n            \"serviceSpecification\": {\n                \"id\": \"111\",\n                \"href\": \"https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/111\",\n                \"name\": \"CFS_Access\"\n            },\n            \"serviceCharacteristic\": [\n                {\n                    \"name\": \"downloadSpeed\",\n                    \"value\": {\n                        \"@type\": \"Bandwidth\",\n                        \"@schemaLocation\": \"https://mycsp.com:8080/tmf-api/schema/Service/Bandwidth.schema.json\",\n                        \"speed\": \"300Mb/s\"\n                    }\n                },\n                {\n                    \"name\": \"uploadSpeed\",\n                    \"value\": {\n                        \"@type\": \"Bandwidth\",\n                        \"@schemaLocation\": \"https://mycsp.com:8080/tmf-api/schema/Service/Bandwidth.schema.json\",\n                        \"speed\": \"100Mb/s\"\n                    }\n                }\n            ],\n            \"place\": [{\n                \"href\": \"https://mycsp.com:8080/tmf-api/geographicAddressManagement/v4/geographicAddress/25511\",\n                \"id\": \"25511\",\n                \"name\": \"160 de Versailles Avenue 75016 Paris France\",\n                \"role\": \"installationAddress\",\n                \"@type\": \"GeographicAddress\"\n            }]\n           \n        }\n    }],\n    \"relatedParty\": [{\n        \"id\": \"14\",\n        \"href\": \"https://mycsp.com:8080/tmf-api/partyManagement/v4/party/14\",\n        \"role\": \"requester\",\n        \"name\": \"John Doe\",\n        \"@referredType\": \"Individual\"\n    }]\n}"
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification"
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				},
				{
					"name": "/serviceQualification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
									"  jsonData.forEach(function (instance, index) {",
									"",
									"    var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"",
									"    pm.test('Instance has all mandatory attributes', function () {",
									"      pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"    });",
									"",
									"",
									"",
									"    pm.test('Response id attribute is of type string', function () {",
									"      pm.expect(instance.id).to.be.a('string');",
									"    });",
									"    pm.test('Response href attribute is of type string', function () {",
									"      pm.expect(instance.href).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"    });",
									"    pm.test('Response state attribute is of type string', function () {",
									"      pm.expect(instance.state).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"      pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"    });",
									"    pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"    });",
									"",
									"",
									"    pm.test(\"Body includes value held on id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.id);",
									"    });",
									"    pm.test(\"Body includes value held on href\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.href);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"    });",
									"    pm.test(\"Body includes value held on state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.state);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"    });",
									"",
									"",
									"",
									"",
									"    // Individualized tests",
									"    if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"",
									"      pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function () {",
									"        pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");",
									"      });",
									"      pm.test('href is ' + pm.globals.get(\"HREFSQ01\"), function () {",
									"        pm.expect(instance.href) == pm.globals.get(\"HREFSQ01\");",
									"      });",
									"      pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\");",
									"      });",
									"      pm.test('state is ' + pm.globals.get(\"STATESQ01\"), function () {",
									"        pm.expect(instance.state) == pm.globals.get(\"STATESQ01\");",
									"      });",
									"      pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");",
									"      });",
									"",
									"    }",
									"",
									"",
									"  });",
									"} else {",
									"  var instance = pm.response.json();",
									"  var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"",
									"  pm.test('Instance has all mandatory attributes', function () {",
									"    pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"  });",
									"",
									"",
									"",
									"  pm.test('Response id attribute is of type string', function () {",
									"    pm.expect(instance.id).to.be.a('string');",
									"  });",
									"  pm.test('Response href attribute is of type string', function () {",
									"    pm.expect(instance.href).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"  });",
									"  pm.test('Response state attribute is of type string', function () {",
									"    pm.expect(instance.state).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"    pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"  });",
									"  pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"  });",
									"",
									"",
									"  pm.test(\"Body includes value held on id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.id);",
									"  });",
									"  pm.test(\"Body includes value held on href\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.href);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"  });",
									"  pm.test(\"Body includes value held on state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.state);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"  });",
									"",
									"",
									"",
									"",
									"  // Individualized tests",
									"  if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"",
									"    pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function () {",
									"      pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");",
									"    });",
									"    pm.test('href is ' + pm.globals.get(\"HREFSQ01\"), function () {",
									"      pm.expect(instance.href) == pm.globals.get(\"HREFSQ01\");",
									"    });",
									"    pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\");",
									"    });",
									"    pm.test('state is ' + pm.globals.get(\"STATESQ01\"), function () {",
									"      pm.expect(instance.state) == pm.globals.get(\"STATESQ01\");",
									"    });",
									"    pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");",
									"    });",
									"",
									"  }",
									"",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification"
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				},
				{
					"name": "/serviceQualification/{{IDSQ01}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
									"  jsonData.forEach(function (instance, index) {",
									"    ",
									"    var requiredAttributes = [ 'id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem',  ];",
									"    ",
									"    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
									"    ",
									"    ",
									"    ",
									"    pm.test('Response id attribute is of type string', function() { pm.expect(instance.id).to.be.a('string'); });",
									"pm.test('Response href attribute is of type string', function() { pm.expect(instance.href).to.be.a('string'); });",
									"pm.test('Response serviceQualificationDate attribute is of type string', function() { pm.expect(instance.serviceQualificationDate).to.be.a('string'); });",
									"pm.test('Response state attribute is of type string', function() { pm.expect(instance.state).to.be.a('string'); });",
									"pm.test('Response serviceQualificationItem attribute is of type array', function() { pm.expect(instance.serviceQualificationItem).to.be.a('array'); });",
									"pm.test('Response serviceQualificationItem.id attribute is of type string', function() { pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string'); });",
									"pm.test('Response serviceQualificationItem.state attribute is of type string', function() { pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string'); });",
									"",
									"    ",
									"    pm.test(\"Body includes value held on id\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.id);",
									"      });",
									"pm.test(\"Body includes value held on href\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.href);",
									"      });",
									"pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"      });",
									"pm.test(\"Body includes value held on state\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.state);",
									"      });",
									"pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"            pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"        });",
									"pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"            pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"        });",
									"",
									"    ",
									"    ",
									"",
									"    // Individualized tests",
									"    if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"",
									"      pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function() {pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");});",
									"pm.test('href is ' + pm.globals.get(\"HREFSQ01\"), function() {pm.expect(instance.href) == pm.globals.get(\"HREFSQ01\");});",
									"pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\"), function() {pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\");});",
									"pm.test('state is ' + pm.globals.get(\"STATESQ01\"), function() {pm.expect(instance.state) == pm.globals.get(\"STATESQ01\");});",
									"pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function() {pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");});",
									"pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\"), function() {pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\");});",
									"pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function() {pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");});",
									"",
									"    }",
									"    if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"",
									"      pm.test('IDSQ02 not expected on this test', function (){pm.expect.fail()});",
									"    }",
									"",
									"  });",
									"}",
									"else {",
									"  var requiredAttributes = [ 'id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem',  ];",
									"  var instance = pm.response.json();",
									"    ",
									"  pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
									"  ",
									"  ",
									"  ",
									"  pm.test('Response id attribute is of type string', function() { pm.expect(instance.id).to.be.a('string'); });",
									"pm.test('Response href attribute is of type string', function() { pm.expect(instance.href).to.be.a('string'); });",
									"pm.test('Response serviceQualificationDate attribute is of type string', function() { pm.expect(instance.serviceQualificationDate).to.be.a('string'); });",
									"pm.test('Response state attribute is of type string', function() { pm.expect(instance.state).to.be.a('string'); });",
									"pm.test('Response serviceQualificationItem attribute is of type array', function() { pm.expect(instance.serviceQualificationItem).to.be.a('array'); });",
									"pm.test('Response serviceQualificationItem.id attribute is of type string', function() { pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string'); });",
									"pm.test('Response serviceQualificationItem.state attribute is of type string', function() { pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string'); });",
									"",
									"  ",
									"  pm.test(\"Body includes value held on id\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.id);",
									"      });",
									"pm.test(\"Body includes value held on href\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.href);",
									"      });",
									"pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"      });",
									"pm.test(\"Body includes value held on state\", function () {",
									"          pm.expect(pm.response.text()).to.include(instance.state);",
									"      });",
									"pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"            pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"        });",
									"pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"            pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"        });",
									"",
									"  ",
									"  ",
									"",
									"  // Individualized tests",
									"  if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"",
									"    pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function() {pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");});",
									"pm.test('href is ' + pm.globals.get(\"HREFSQ01\"), function() {pm.expect(instance.href) == pm.globals.get(\"HREFSQ01\");});",
									"pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\"), function() {pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\");});",
									"pm.test('state is ' + pm.globals.get(\"STATESQ01\"), function() {pm.expect(instance.state) == pm.globals.get(\"STATESQ01\");});",
									"pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function() {pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");});",
									"pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\"), function() {pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\");});",
									"pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function() {pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");});",
									"",
									"  }",
									"  if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"",
									"    pm.test('IDSQ02 not expected on this test', function (){pm.expect.fail()});",
									"  }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification/{{IDSQ01}}",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification",
								"{{IDSQ01}}"
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				}
			]
		},
		{
			"name": "N2",
			"item": [
				{
					"name": "/serviceQualification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData)) {",
									"",
									"    pm.test('Array not expected as response', function () {",
									"        pm.expect.fail()",
									"    });",
									"",
									"",
									"}",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var instance = pm.response.json();",
									"var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"",
									"pm.test('Instance has all mandatory attributes', function () {",
									"    pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"});",
									"",
									"",
									"",
									"pm.test('Response id attribute is of type string', function () {",
									"    pm.expect(instance.id).to.be.a('string');",
									"});",
									"pm.test('Response href attribute is of type string', function () {",
									"    pm.expect(instance.href).to.be.a('string');",
									"});",
									"pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"});",
									"pm.test('Response state attribute is of type string', function () {",
									"    pm.expect(instance.state).to.be.a('string');",
									"});",
									"pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"    pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"});",
									"pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"});",
									"pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"});",
									"",
									"",
									"pm.test('id is set', function () {",
									"    pm.globals.set('IDSQ02', instance.id);",
									"    pm.expect(instance.id) == pm.globals.get(\"IDSQ02\");",
									"});",
									"pm.test('href is set', function () {",
									"    pm.globals.set('HREFSQ02', instance.href);",
									"    pm.expect(instance.href) == pm.globals.get(\"HREFSQ02\");",
									"});",
									"pm.test('serviceQualificationDate is set', function () {",
									"    pm.globals.set('SERVICEQUALIFICATIONDATESQ02', instance.serviceQualificationDate);",
									"    pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\");",
									"});",
									"pm.test('state is set', function () {",
									"    pm.globals.set('STATESQ02', instance.state);",
									"    pm.expect(instance.state) == pm.globals.get(\"STATESQ02\");",
									"});",
									"pm.test('serviceQualificationItem is set', function () {",
									"    pm.globals.set('SERVICEQUALIFICATIONITEMSQ02', instance.serviceQualificationItem);",
									"    pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\");",
									"});",
									"pm.test('serviceQualificationItem_id is set', function () {",
									"    pm.globals.set('SERVICEQUALIFICATIONITEM_IDSQ02', instance.serviceQualificationItem[0].id);",
									"    pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\");",
									"});",
									"pm.test('serviceQualificationItem_state is set', function () {",
									"    pm.globals.set('SERVICEQUALIFICATIONITEM_STATESQ02', instance.serviceQualificationItem[0].state);",
									"    pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\");",
									"});",
									"",
									"",
									"pm.test(\"Body includes value held on id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.id);",
									"});",
									"pm.test(\"Body includes value held on href\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.href);",
									"});",
									"pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"});",
									"pm.test(\"Body includes value held on state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.state);",
									"});",
									"pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"});",
									"pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Deliver access and IPTV at a given address\",\n    \"externalId\": \"SQ102\",\n    \"expectedQualificationDate\": \"2017-10-25T12:13:16.361Z\",\n    \"estimatedResponseDate\": \"2020-10-25T12:13:16.361Z\",\n    \"provideAlternative\": true,\n    \"provideOnlyAvailable\": true,\n    \"provideUnavailabilityReason\": false,\n    \"serviceQualificationItem\": [{\n        \"id\": \"1\",\n        \"service\": {\n            \"serviceSpecification\": {\n                \"id\": \"111\",\n                \"href\": \"https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/111\",\n                \"name\": \"CFS_Access\"\n            },\n            \"serviceCharacteristic\": [{\n                    \"name\": \"downloadSpeed\",\n                    \"value\": {\n                        \"@type\": \"Bandwidth\",\n                        \"@schemaLocation\": \"https://mycsp.com:8080/tmf-api/schema/Service/Bandwidth.schema.json\",\n                        \"speed\": \"300Mb/s\"\n                    }\n                },\n                {\n                    \"name\": \"uploadSpeed\",\n                    \"value\": {\n                        \"@type\": \"Bandwidth\",\n                        \"@schemaLocation\": \"https://mycsp.com:8080/tmf-api/schema/Service/Bandwidth.schema.json\",\n                        \"speed\": \"100Mb/s\"\n                    }\n                }\n            ],\n            \"place\": [{\n                \"href\": \"https://mycsp.com:8080/tmf-api/geographicAddressManagement/v4/geographicAddress/25511\",\n                \"id\": \"25511\",\n                \"name\": \"160 de Versailles Avenue 75016 Paris France\",\n                \"role\": \"installationAddress\",\n                \"@type\": \"GeographicAddress\"\n            }]\n\n        }\n    }],\n    \"relatedParty\": [{\n        \"id\": \"15\",\n        \"href\": \"https://mycsp.com:8080/tmf-api/partyManagement/v4/party/15\",\n        \"role\": \"requester\",\n        \"name\": \"John Doe\",\n        \"@referredType\": \"Individual\"\n    }]\n}"
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification"
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				},
				{
					"name": "/serviceQualification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
									"  jsonData.forEach(function (instance, index) {",
									"",
									"    var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"",
									"    pm.test('Instance has all mandatory attributes', function () {",
									"      pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"    });",
									"",
									"",
									"",
									"    pm.test('Response id attribute is of type string', function () {",
									"      pm.expect(instance.id).to.be.a('string');",
									"    });",
									"    pm.test('Response href attribute is of type string', function () {",
									"      pm.expect(instance.href).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"    });",
									"    pm.test('Response state attribute is of type string', function () {",
									"      pm.expect(instance.state).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"      pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"    });",
									"    pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"    });",
									"",
									"",
									"    pm.test(\"Body includes value held on id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.id);",
									"    });",
									"    pm.test(\"Body includes value held on href\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.href);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"    });",
									"    pm.test(\"Body includes value held on state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.state);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"    });",
									"",
									"",
									"",
									"",
									"    // Individualized tests",
									"    if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"",
									"      pm.test('id is ' + pm.globals.get(\"IDSQ02\"), function () {",
									"        pm.expect(instance.id) == pm.globals.get(\"IDSQ02\");",
									"      });",
									"      pm.test('href is ' + pm.globals.get(\"HREFSQ02\"), function () {",
									"        pm.expect(instance.href) == pm.globals.get(\"HREFSQ02\");",
									"      });",
									"      pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\");",
									"      });",
									"      pm.test('state is ' + pm.globals.get(\"STATESQ02\"), function () {",
									"        pm.expect(instance.state) == pm.globals.get(\"STATESQ02\");",
									"      });",
									"      pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\");",
									"      });",
									"",
									"    }",
									"",
									"",
									"  });",
									"} else {",
									"  var instance = pm.response.json();",
									"  var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"",
									"  pm.test('Instance has all mandatory attributes', function () {",
									"    pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"  });",
									"",
									"",
									"",
									"  pm.test('Response id attribute is of type string', function () {",
									"    pm.expect(instance.id).to.be.a('string');",
									"  });",
									"  pm.test('Response href attribute is of type string', function () {",
									"    pm.expect(instance.href).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"  });",
									"  pm.test('Response state attribute is of type string', function () {",
									"    pm.expect(instance.state).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"    pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"  });",
									"  pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"  });",
									"",
									"",
									"  pm.test(\"Body includes value held on id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.id);",
									"  });",
									"  pm.test(\"Body includes value held on href\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.href);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"  });",
									"  pm.test(\"Body includes value held on state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.state);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"  });",
									"",
									"",
									"",
									"",
									"  // Individualized tests",
									"  if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"",
									"    pm.test('id is ' + pm.globals.get(\"IDSQ02\"), function () {",
									"      pm.expect(instance.id) == pm.globals.get(\"IDSQ02\");",
									"    });",
									"    pm.test('href is ' + pm.globals.get(\"HREFSQ02\"), function () {",
									"      pm.expect(instance.href) == pm.globals.get(\"HREFSQ02\");",
									"    });",
									"    pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\");",
									"    });",
									"    pm.test('state is ' + pm.globals.get(\"STATESQ02\"), function () {",
									"      pm.expect(instance.state) == pm.globals.get(\"STATESQ02\");",
									"    });",
									"    pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\");",
									"    });",
									"",
									"  }",
									"",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification"
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				},
				{
					"name": "/serviceQualification/{{IDSQ02}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
									"  jsonData.forEach(function (instance, index) {",
									"",
									"    var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"",
									"    pm.test('Instance has all mandatory attributes', function () {",
									"      pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"    });",
									"",
									"",
									"",
									"    pm.test('Response id attribute is of type string', function () {",
									"      pm.expect(instance.id).to.be.a('string');",
									"    });",
									"    pm.test('Response href attribute is of type string', function () {",
									"      pm.expect(instance.href).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"    });",
									"    pm.test('Response state attribute is of type string', function () {",
									"      pm.expect(instance.state).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"      pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"    });",
									"    pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"    });",
									"",
									"",
									"    pm.test(\"Body includes value held on id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.id);",
									"    });",
									"    pm.test(\"Body includes value held on href\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.href);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"    });",
									"    pm.test(\"Body includes value held on state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.state);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"    });",
									"",
									"",
									"",
									"",
									"    // Individualized tests",
									"    if (instance.id == pm.globals.get(\"IDSO02\")) {",
									"",
									"      pm.test('id is ' + pm.globals.get(\"IDSQ02\"), function () {",
									"        pm.expect(instance.id) == pm.globals.get(\"IDSQ02\");",
									"      });",
									"      pm.test('href is ' + pm.globals.get(\"HREFSQ02\"), function () {",
									"        pm.expect(instance.href) == pm.globals.get(\"HREFSQ02\");",
									"      });",
									"      pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\");",
									"      });",
									"      pm.test('state is ' + pm.globals.get(\"STATESQ02\"), function () {",
									"        pm.expect(instance.state) == pm.globals.get(\"STATESQ02\");",
									"      });",
									"      pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\");",
									"      });",
									"",
									"    }",
									"    if (instance.id == pm.globals.get(\"IDSO01\")) {",
									"",
									"      pm.test('pm.globals.get(IDSO01) not expected on this test', function () {",
									"        pm.expect.fail()",
									"      });",
									"    }",
									"",
									"  });",
									"} else {",
									"  var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"  var instance = pm.response.json();",
									"",
									"  pm.test('Instance has all mandatory attributes', function () {",
									"    pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"  });",
									"",
									"",
									"",
									"  pm.test('Response id attribute is of type string', function () {",
									"    pm.expect(instance.id).to.be.a('string');",
									"  });",
									"  pm.test('Response href attribute is of type string', function () {",
									"    pm.expect(instance.href).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"  });",
									"  pm.test('Response state attribute is of type string', function () {",
									"    pm.expect(instance.state).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"    pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"  });",
									"  pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"  });",
									"",
									"",
									"  pm.test(\"Body includes value held on id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.id);",
									"  });",
									"  pm.test(\"Body includes value held on href\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.href);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"  });",
									"  pm.test(\"Body includes value held on state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.state);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"  });",
									"",
									"",
									"",
									"",
									"  // Individualized tests",
									"  if (instance.id == pm.globals.get(\"IDSO02\")) {",
									"",
									"    pm.test('id is ' + pm.globals.get(\"IDSQ02\"), function () {",
									"      pm.expect(instance.id) == pm.globals.get(\"IDSQ02\");",
									"    });",
									"    pm.test('href is ' + pm.globals.get(\"HREFSQ02\"), function () {",
									"      pm.expect(instance.href) == pm.globals.get(\"HREFSQ02\");",
									"    });",
									"    pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\");",
									"    });",
									"    pm.test('state is ' + pm.globals.get(\"STATESQ02\"), function () {",
									"      pm.expect(instance.state) == pm.globals.get(\"STATESQ02\");",
									"    });",
									"    pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\");",
									"    });",
									"",
									"  }",
									"  if (instance.id == pm.globals.get(\"IDSO01\")) {",
									"",
									"    pm.test('pm.globals.get(IDSO01) not expected on this test', function () {",
									"      pm.expect.fail()",
									"    });",
									"  }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification/{{IDSQ02}}",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification",
								"{{IDSQ02}}"
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				}
			]
		},
		{
			"name": "N3",
			"item": [
				{
					"name": "/serviceQualification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
									"  jsonData.forEach(function (instance, index) {",
									"",
									"    var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"",
									"    pm.test('Instance has all mandatory attributes', function () {",
									"      pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"    });",
									"",
									"",
									"",
									"    pm.test('Response id attribute is of type string', function () {",
									"      pm.expect(instance.id).to.be.a('string');",
									"    });",
									"    pm.test('Response href attribute is of type string', function () {",
									"      pm.expect(instance.href).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"    });",
									"    pm.test('Response state attribute is of type string', function () {",
									"      pm.expect(instance.state).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"      pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"    });",
									"    pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"    });",
									"",
									"",
									"    pm.test(\"Body includes value held on id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.id);",
									"    });",
									"    pm.test(\"Body includes value held on href\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.href);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"    });",
									"    pm.test(\"Body includes value held on state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.state);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"    });",
									"",
									"",
									"",
									"",
									"    // Individualized tests",
									"    if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"",
									"      pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function () {",
									"        pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");",
									"      });",
									"      pm.test('href is ' + pm.globals.get(\"HREFSQ01\"), function () {",
									"        pm.expect(instance.href) == pm.globals.get(\"HREFSQ01\");",
									"      });",
									"      pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\");",
									"      });",
									"      pm.test('state is ' + pm.globals.get(\"STATESQ01\"), function () {",
									"        pm.expect(instance.state) == pm.globals.get(\"STATESQ01\");",
									"      });",
									"      pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");",
									"      });",
									"",
									"    }",
									"    if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"",
									"      pm.test('id is ' + pm.globals.get(\"IDSQ02\"), function () {",
									"        pm.expect(instance.id) == pm.globals.get(\"IDSQ02\");",
									"      });",
									"      pm.test('href is ' + pm.globals.get(\"HREFSQ02\"), function () {",
									"        pm.expect(instance.href) == pm.globals.get(\"HREFSQ02\");",
									"      });",
									"      pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\");",
									"      });",
									"      pm.test('state is ' + pm.globals.get(\"STATESQ02\"), function () {",
									"        pm.expect(instance.state) == pm.globals.get(\"STATESQ02\");",
									"      });",
									"      pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\");",
									"      });",
									"",
									"    }",
									"",
									"",
									"  });",
									"} else {",
									"  var instance = pm.response.json();",
									"  var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"",
									"  pm.test('Instance has all mandatory attributes', function () {",
									"    pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"  });",
									"",
									"",
									"",
									"  pm.test('Response id attribute is of type string', function () {",
									"    pm.expect(instance.id).to.be.a('string');",
									"  });",
									"  pm.test('Response href attribute is of type string', function () {",
									"    pm.expect(instance.href).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"  });",
									"  pm.test('Response state attribute is of type string', function () {",
									"    pm.expect(instance.state).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"    pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"  });",
									"  pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"  });",
									"",
									"",
									"  pm.test(\"Body includes value held on id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.id);",
									"  });",
									"  pm.test(\"Body includes value held on href\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.href);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"  });",
									"  pm.test(\"Body includes value held on state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.state);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"  });",
									"",
									"",
									"",
									"",
									"  // Individualized tests",
									"  if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"",
									"    pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function () {",
									"      pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");",
									"    });",
									"    pm.test('href is ' + pm.globals.get(\"HREFSQ01\"), function () {",
									"      pm.expect(instance.href) == pm.globals.get(\"HREFSQ01\");",
									"    });",
									"    pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\");",
									"    });",
									"    pm.test('state is ' + pm.globals.get(\"STATESQ01\"), function () {",
									"      pm.expect(instance.state) == pm.globals.get(\"STATESQ01\");",
									"    });",
									"    pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");",
									"    });",
									"",
									"  }",
									"  if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"",
									"    pm.test('id is ' + pm.globals.get(\"IDSQ02\"), function () {",
									"      pm.expect(instance.id) == pm.globals.get(\"IDSQ02\");",
									"    });",
									"    pm.test('href is ' + pm.globals.get(\"HREFSQ02\"), function () {",
									"      pm.expect(instance.href) == pm.globals.get(\"HREFSQ02\");",
									"    });",
									"    pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\");",
									"    });",
									"    pm.test('state is ' + pm.globals.get(\"STATESQ02\"), function () {",
									"      pm.expect(instance.state) == pm.globals.get(\"STATESQ02\");",
									"    });",
									"    pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ02\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ02\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ02\");",
									"    });",
									"",
									"  }",
									"",
									"}",
									"",
									"pm.test(\"Body has IDSQ01\", function () {",
									"  pm.expect(pm.response.text()).to.include(pm.globals.get(\"IDSQ01\"));",
									"});",
									"",
									"pm.test(\"Body has IDSQ02\", function () {",
									"  pm.expect(pm.response.text()).to.include(pm.globals.get(\"IDSQ02\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification"
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				},
				{
					"name": "/serviceQualification?externalId=SQ101",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
									"  jsonData.forEach(function (instance, index) {",
									"",
									"    var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"",
									"    pm.test('Instance has all mandatory attributes', function () {",
									"      pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"    });",
									"",
									"",
									"",
									"    pm.test('Response id attribute is of type string', function () {",
									"      pm.expect(instance.id).to.be.a('string');",
									"    });",
									"    pm.test('Response href attribute is of type string', function () {",
									"      pm.expect(instance.href).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"    });",
									"    pm.test('Response state attribute is of type string', function () {",
									"      pm.expect(instance.state).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"      pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"    });",
									"    pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"    });",
									"",
									"",
									"    pm.test(\"Body includes value held on id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.id);",
									"    });",
									"    pm.test(\"Body includes value held on href\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.href);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"    });",
									"    pm.test(\"Body includes value held on state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.state);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"    });",
									"",
									"",
									"",
									"",
									"    // Individualized tests",
									"    if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"",
									"      pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function () {",
									"        pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");",
									"      });",
									"      pm.test('href is ' + pm.globals.get(\"HREFSQ01\"), function () {",
									"        pm.expect(instance.href) == pm.globals.get(\"HREFSQ01\");",
									"      });",
									"      pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\");",
									"      });",
									"      pm.test('state is ' + pm.globals.get(\"STATESQ01\"), function () {",
									"        pm.expect(instance.state) == pm.globals.get(\"STATESQ01\");",
									"      });",
									"      pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");",
									"      });",
									"",
									"    }",
									"    if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"",
									"      pm.test('IDSQ02 not expected on this test', function () {",
									"        pm.expect.fail()",
									"      });",
									"    }",
									"",
									"  });",
									"} else {",
									"  var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"  var instance = pm.response.json();",
									"",
									"  pm.test('Instance has all mandatory attributes', function () {",
									"    pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"  });",
									"",
									"",
									"",
									"  pm.test('Response id attribute is of type string', function () {",
									"    pm.expect(instance.id).to.be.a('string');",
									"  });",
									"  pm.test('Response href attribute is of type string', function () {",
									"    pm.expect(instance.href).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"  });",
									"  pm.test('Response state attribute is of type string', function () {",
									"    pm.expect(instance.state).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"    pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"  });",
									"  pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"  });",
									"",
									"",
									"  pm.test(\"Body includes value held on id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.id);",
									"  });",
									"  pm.test(\"Body includes value held on href\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.href);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"  });",
									"  pm.test(\"Body includes value held on state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.state);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"  });",
									"",
									"",
									"",
									"",
									"  // Individualized tests",
									"  if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"",
									"    pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function () {",
									"      pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");",
									"    });",
									"    pm.test('href is ' + pm.globals.get(\"HREFSQ01\"), function () {",
									"      pm.expect(instance.href) == pm.globals.get(\"HREFSQ01\");",
									"    });",
									"    pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\");",
									"    });",
									"    pm.test('state is ' + pm.globals.get(\"STATESQ01\"), function () {",
									"      pm.expect(instance.state) == pm.globals.get(\"STATESQ01\");",
									"    });",
									"    pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");",
									"    });",
									"",
									"  }",
									"  if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"",
									"    pm.test('IDSQ02 not expected on this test', function () {",
									"      pm.expect.fail()",
									"    });",
									"  }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification?externalId=SQ101",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification"
							],
							"query": [
								{
									"key": "externalId",
									"value": "SQ101"
								}
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				},
				{
					"name": "/serviceQualification?relatedParty.id=14&relatedParty.role=requester",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
									"  jsonData.forEach(function (instance, index) {",
									"",
									"    var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"",
									"    pm.test('Instance has all mandatory attributes', function () {",
									"      pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"    });",
									"",
									"",
									"",
									"    pm.test('Response id attribute is of type string', function () {",
									"      pm.expect(instance.id).to.be.a('string');",
									"    });",
									"    pm.test('Response href attribute is of type string', function () {",
									"      pm.expect(instance.href).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"    });",
									"    pm.test('Response state attribute is of type string', function () {",
									"      pm.expect(instance.state).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"      pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"    });",
									"    pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"    });",
									"    pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"    });",
									"",
									"",
									"    pm.test(\"Body includes value held on id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.id);",
									"    });",
									"    pm.test(\"Body includes value held on href\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.href);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"    });",
									"    pm.test(\"Body includes value held on state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.state);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"    });",
									"    pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"      pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"    });",
									"",
									"",
									"",
									"",
									"    // Individualized tests",
									"    if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"",
									"      pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function () {",
									"        pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");",
									"      });",
									"      pm.test('href is ' + pm.globals.get(\"HREFSQ01\"), function () {",
									"        pm.expect(instance.href) == pm.globals.get(\"HREFSQ01\");",
									"      });",
									"      pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\");",
									"      });",
									"      pm.test('state is ' + pm.globals.get(\"STATESQ01\"), function () {",
									"        pm.expect(instance.state) == pm.globals.get(\"STATESQ01\");",
									"      });",
									"      pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");",
									"      });",
									"",
									"    }",
									"    if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"",
									"      pm.test('IDSQ02 not expected on this test', function () {",
									"        pm.expect.fail()",
									"      });",
									"    }",
									"",
									"  });",
									"} else {",
									"  var requiredAttributes = ['id', 'href', 'serviceQualificationDate', 'state', 'serviceQualificationItem', ];",
									"  var instance = pm.response.json();",
									"",
									"  pm.test('Instance has all mandatory attributes', function () {",
									"    pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"  });",
									"",
									"",
									"",
									"  pm.test('Response id attribute is of type string', function () {",
									"    pm.expect(instance.id).to.be.a('string');",
									"  });",
									"  pm.test('Response href attribute is of type string', function () {",
									"    pm.expect(instance.href).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"  });",
									"  pm.test('Response state attribute is of type string', function () {",
									"    pm.expect(instance.state).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem attribute is of type array', function () {",
									"    pm.expect(instance.serviceQualificationItem).to.be.a('array');",
									"  });",
									"  pm.test('Response serviceQualificationItem.id attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].id).to.be.a('string');",
									"  });",
									"  pm.test('Response serviceQualificationItem.state attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationItem[0].state).to.be.a('string');",
									"  });",
									"",
									"",
									"  pm.test(\"Body includes value held on id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.id);",
									"  });",
									"  pm.test(\"Body includes value held on href\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.href);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationDate\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationDate);",
									"  });",
									"  pm.test(\"Body includes value held on state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.state);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].id\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].id);",
									"  });",
									"  pm.test(\"Body includes value held on serviceQualificationItem[0].state\", function () {",
									"    pm.expect(pm.response.text()).to.include(instance.serviceQualificationItem[0].state);",
									"  });",
									"",
									"",
									"",
									"",
									"  // Individualized tests",
									"  if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"",
									"    pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function () {",
									"      pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");",
									"    });",
									"    pm.test('href is ' + pm.globals.get(\"HREFSQ01\"), function () {",
									"      pm.expect(instance.href) == pm.globals.get(\"HREFSQ01\");",
									"    });",
									"    pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ01\");",
									"    });",
									"    pm.test('state is ' + pm.globals.get(\"STATESQ01\"), function () {",
									"      pm.expect(instance.state) == pm.globals.get(\"STATESQ01\");",
									"    });",
									"    pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_IDSQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].id) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_IDSQ01\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");",
									"    });",
									"",
									"  }",
									"  if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"",
									"    pm.test('IDSQ02 not expected on this test', function () {",
									"      pm.expect.fail()",
									"    });",
									"  }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification?relatedParty.id=14&relatedParty.role=requester",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification"
							],
							"query": [
								{
									"key": "relatedParty.id",
									"value": "14"
								},
								{
									"key": "relatedParty.role",
									"value": "requester"
								}
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				}
			]
		},
		{
			"name": "N4",
			"item": [
				{
					"name": "/serviceQualification/{{IDSQ01}}?fields=id,state,serviceQualificationItem.state,serviceQualificationItem.qualificationItemResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
									"  jsonData.forEach(function (instance, index) {",
									"",
									"    var requiredAttributes = ['id', 'serviceQualificationItem', 'state'];",
									"",
									"    pm.test('Instance has all mandatory attributes', function () {",
									"      pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"    });",
									"",
									"",
									"",
									"    // Individualized tests",
									"    if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"      pm.test('IDSQ02 not expected on this test', function () {",
									"        pm.expect.fail()",
									"      });",
									"",
									"    }",
									"    if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"      pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function () {",
									"        pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");",
									"      });",
									"",
									"      pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");",
									"      });",
									"      pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function () {",
									"        pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");",
									"      });",
									"",
									"    }",
									"",
									"  });",
									"} else {",
									"  var instance = pm.response.json();",
									"",
									"  var requiredAttributes = ['id', 'serviceQualificationItem', 'state'];",
									"",
									"  pm.test('Instance has all mandatory attributes', function () {",
									"    pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"  });",
									"",
									"",
									"",
									"  // Individualized tests",
									"  if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"    pm.test('IDSQ02 not expected on this test', function () {",
									"      pm.expect.fail()",
									"    });",
									"",
									"  }",
									"  if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"    pm.test('id is ' + pm.globals.get(\"IDSQ01\"), function () {",
									"      pm.expect(instance.id) == pm.globals.get(\"IDSQ01\");",
									"    });",
									"",
									"    pm.test('serviceQualificationItem is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem) == pm.globals.get(\"SERVICEQUALIFICATIONITEMSQ01\");",
									"    });",
									"    pm.test('SERVICEQUALIFICATIONITEM_STATESQ is ' + pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\"), function () {",
									"      pm.expect(instance.serviceQualificationItem[0].state) == pm.globals.get(\"SERVICEQUALIFICATIONITEM_STATESQ01\");",
									"    });",
									"  }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification/{{IDSQ01}}?fields=id,state,serviceQualificationItem.state,serviceQualificationItem.qualificationItemResult",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification",
								"{{IDSQ01}}"
							],
							"query": [
								{
									"key": "fields",
									"value": "id,state,serviceQualificationItem.state,serviceQualificationItem.qualificationItemResult"
								}
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				},
				{
					"name": "/serviceQualification/{{IDSQ02}}?fields=serviceQualificationDate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
									"  jsonData.forEach(function (instance, index) {",
									"",
									"    var requiredAttributes = ['serviceQualificationDate'];",
									"",
									"    pm.test('Instance has all mandatory attributes', function () {",
									"      pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"    });",
									"",
									"",
									"",
									"    // Individualized tests",
									"    if (instance.id == pm.globals.get(\"IDSQ01\")) {",
									"      pm.test('IDSQ01 not expected on this test', function () {",
									"        pm.expect.fail()",
									"      });",
									"",
									"    }",
									"    if (instance.id == pm.globals.get(\"IDSQ02\")) {",
									"      pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"        pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"      });",
									"      pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\"), function () {",
									"        pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\");",
									"      });",
									"    }",
									"",
									"  });",
									"} else {",
									"  var instance = pm.response.json();",
									"",
									"  var requiredAttributes = ['serviceQualificationDate'];",
									"",
									"  pm.test('Instance has all mandatory attributes', function () {",
									"    pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"  });",
									"",
									"",
									"",
									"  // Individualized tests",
									"  pm.test('Response serviceQualificationDate attribute is of type string', function () {",
									"    pm.expect(instance.serviceQualificationDate).to.be.a('string');",
									"  });",
									"  pm.test('serviceQualificationDate is ' + pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\"), function () {",
									"    pm.expect(instance.serviceQualificationDate) == pm.globals.get(\"SERVICEQUALIFICATIONDATESQ02\");",
									"  });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification/{{IDSQ02}}?fields=serviceQualificationDate",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification",
								"{{IDSQ02}}"
							],
							"query": [
								{
									"key": "fields",
									"value": "serviceQualificationDate"
								}
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				}
			]
		},
		{
			"name": "N5",
			"item": [
				{
					"name": "/serviceQualification?relatedParty.id=15&fields=id,state",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"var jsonData = pm.response.json();",
									"",
									"if (Array.isArray(jsonData)) {",
									"  jsonData.forEach(function (instance, index) {",
									"",
									"    var requiredAttributes = ['id', 'state'];",
									"",
									"    pm.test('Instance has all mandatory attributes', function () {",
									"      pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"    });",
									"",
									"    pm.test('Response state attribute is of type string', function () {",
									"      pm.expect(instance.state).to.be.a('string');",
									"    });",
									"",
									"    pm.test('Response id attribute is of type string', function () {",
									"      pm.expect(instance.id).to.be.a('string');",
									"    });",
									"",
									"    pm.test('state is ' + pm.globals.get(\"STATESQ02\"), function () {",
									"      pm.expect(instance.state) == pm.globals.get(\"STATESQ02\");",
									"    });",
									"",
									"    pm.test('id is ' + pm.globals.get(\"IDSQ02\"), function () {",
									"      pm.expect(instance.id) == pm.globals.get(\"IDSQ02\");",
									"    });",
									"",
									"  });",
									"} else {",
									"  var instance = pm.response.json();",
									"",
									"  var requiredAttributes = ['id', 'state'];",
									"",
									"  pm.test('Instance has all mandatory attributes', function () {",
									"    pm.expect(Object.keys(instance)).to.include.members(requiredAttributes)",
									"  });",
									"",
									"",
									"",
									"  // Individualized tests",
									"  pm.test('Response state attribute is of type string', function () {",
									"    pm.expect(instance.state).to.be.a('string');",
									"  });",
									"",
									"  pm.test('Response id attribute is of type string', function () {",
									"    pm.expect(instance.id).to.be.a('string');",
									"  });",
									"",
									"  pm.test('state is ' + pm.globals.get(\"STATESQ02\"), function () {",
									"    pm.expect(instance.state) == pm.globals.get(\"STATESQ02\");",
									"  });",
									"",
									"  pm.test('id is ' + pm.globals.get(\"IDSQ02\"), function () {",
									"    pm.expect(instance.id) == pm.globals.get(\"IDSQ02\");",
									"  });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification?relatedParty.id=15&fields=id,state",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification"
							],
							"query": [
								{
									"key": "relatedParty.id",
									"value": "15"
								},
								{
									"key": "fields",
									"value": "id,state"
								}
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				}
			]
		},
		{
			"name": "E1",
			"item": [
				{
					"name": "/serviceQualification/{{BADID}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification/{{BADID}}",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification",
								"{{BADID}}"
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				}
			]
		},
		{
			"name": "E2",
			"item": [
				{
					"name": "/serviceQualification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Maximum download/upload speed for access\",\n    \"expectedQualificationDate\": \"2017-10-25T12:13:16.361Z\",\n    \"provideAlternative\": true,\n    \"provideOnlyAvailable\": false,\n    \"provideUnavailabilityReason\": false,\n    \"relatedParty\": [{\n        \"id\": \"14\",\n        \"href\": \"https://host:port/partyManagement/individual/14\",\n        \"role\": \"requester\",\n        \"name\": \"John Doe\"\n    }]\n}"
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification"
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				}
			]
		},
		{
			"name": "E3",
			"item": [
				{
					"name": "/serviceQualification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0933fa1b-9cef-45cc-bb3e-e3621665b5f5",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n    \"description\": \"Maximum download/upload speed for access\",\n    \"expectedQualificationDate\": \"2017-10-25T12:13:16.361Z\",\n    \"provideAlternative\": true,\n    \"provideOnlyAvailable\": false,\n    \"provideUnavailabilityReason\": true\n}"
						},
						"url": {
							"raw": "{{ServiceQualificationAPI}}/serviceQualification",
							"host": [
								"{{ServiceQualificationAPI}}"
							],
							"path": [
								"serviceQualification"
							]
						},
						"description": "This operation creates a ServiceQualification entity."
					},
					"response": []
				}
			]
		}
	]
}